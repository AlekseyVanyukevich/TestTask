@using Microsoft.EntityFrameworkCore.Internal
@model PaginatedResponseModel<TestTask.Domain.ViewModels.Author.AuthorModel>

<div class="row">
    @foreach (var author in @Model.Data)
    {
        <div class="col-3 mb-3">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">
                        @Html.DisplayNameFor(x => author.Surname): @author.Surname
                    </h5>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var book in author.Books)
                        {
                            <a class="list-group-item list-group-item-action" href="@Url.Action("BookDetails", "Library", new {id = book.Id})">
                                #@(author.Books.IndexOf(book) + 1) @book.Name (@book.Year)
                            </a>
                        }
                    </div>
                </div>
                <div class="card-footer">
                    @Html.ActionLink("Author profile", "AuthorProfile", "Library", new {id = author.Id}, new {@class = "btn btn-primary"});
                </div>
            </div>
        </div>
    }
</div>
<div class="d-flex justify-content-between">
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item @(!Model.HasPrevious ? "disabled" : "")">
                    @if (Model.HasPrevious)
                    {
                        <a class="page-link" aria-label="Previous" href="@Url.Action("AuthorList", "Library", new {pageIndex = Model.PageIndex - 1})">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    }
                    else
                    {
                        <a class="page-link" href="#" tabindex="-1">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    }
    
                </li>
                <li class="page-item @(!Model.HasNext ? "disabled" : "")">
                    @if (Model.HasNext)
                    {
                        <a class="page-link" aria-label="Previous" href="@Url.Action("AuthorList", "Library", new {pageIndex = Model.PageIndex + 1})">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    }
                    else
                    {
                        <a class="page-link" href="#" tabindex="-1">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    }
    
                </li>
            </ul>
        </nav>
    }
    <a href="@Url.Action("CreateAuthor", "Library")" class="btn btn-primary">Create author</a>
</div>
